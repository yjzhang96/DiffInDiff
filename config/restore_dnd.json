{
    "name": "deblur_dnd",
    "phase": "train", // train or val
    "gpu_ids": [
        0,1
    ],
    "path": { //set the path
        "log": "logs",
        "tb_logger": "tb_logger",
        "results": "results",
        "checkpoint": "checkpoint",
        "resume_state": null
        // "resume_state": "/home/yjz/Diffusion/Image-Super-Resolution-via-Iterative-Refinement/experiments/deblur_residual_220222_141117/checkpoint/Ilatest_Elatest" //pretrain model or training state
    },
    "datasets": {
        "train": {
            "name": "GOPRO",
            "mode": "LQHQ", // whether need LR img
            "dataroot": "/hdd/deblur_datasets/Deblur_whole/train",
            "datatype": "img", //lmdb or img, path of img files
            "l_resolution": 256, // low resolution need to super_resolution
            "r_resolution": 256, // high resolution
            "patch_size": 256,
            "batch_size": 4,
            "num_workers": 8,
            "use_shuffle": true,
            "data_len": -1 // -1 represents all data used in train
        },
        "val": {
            "name": "GOPRO",
            "mode": "LQHQ",
            "dataroot": "/hdd/deblur_datasets/Deblur_whole/test/GOPRO",
            "datatype": "img", //lmdb or img, path of img files
            "l_resolution": 256,
            "r_resolution": 256,
            "patch_size": -1,
            "data_len": 50 // data length in validation 
        }
    },
    "model":{
        "which_model_G": "dnd", // use the ddpm or sr3 network structure
        "model_d": {
            "finetune_norm": false,
            "unet": {
                "in_channel": 6,
                "out_channel": 3,
                "inner_channel": 32,
                "channel_multiplier": [
                    1,
                    2,
                    4,
                    8,
                    8
                ],
                "attn_res": [
                    16
                ],
                "res_blocks": 2,
                "dropout": 0.2
            }
        },
        "model_D": {
            "finetune_norm": false,
            "unet": {
                "in_channel": 6,
                "out_channel": 3,
                "inner_channel": 64,
                "channel_multiplier": [
                    1,
                    2,
                    4,
                    8,
                    8
                ],
                "attn_res": [
                    16
                ],
                "res_blocks": 2,
                "dropout": 0.2
            }
        },
        "beta_schedule": { // use munual beta_schedule for acceleration
            "train": {
                "schedule": "linear",
                "n_timestep": 1000,
                "linear_start": 1e-6,
                "linear_end": 1e-2
            },
            "val": {
                "schedule": "linear",
                "n_timestep": 1000,
                "linear_start": 1e-6,
                "linear_end": 1e-2
            }
        },
        "diffusion": {
            "image_size": 256,
            "channels": 3, //sample channel
            "conditional": true // unconditional generation or unconditional generation(super_resolution)
        }
    },
    "train": {
        "n_iter": 1000000,
        "val_freq": 1e4,
        "save_checkpoint_freq": 1e4,
        "print_freq": 200,
        "optimizer": {
            "type": "adam",
            "lr": 1e-4
        },
        "ema_scheduler": { // not used now
            "step_start_ema": 5000,
            "update_ema_every": 1,
            "ema_decay": 0.9999
        }
    },
    "sample": {
        "sample_type": "generalized",
        "skip_type": "uniform",
        "n_timestep": 1000,
        "sample_step": 10
    },
    "wandb": {
        "project": "deblur_residual"
    }
}